// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc319.RecyleRush.subsystems;

import org.usfirst.frc319.RecyleRush.Robot;
import org.usfirst.frc319.RecyleRush.RobotMap;
import org.usfirst.frc319.RecyleRush.commands.*;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class ActiveCollector extends Subsystem {
	SpeedController leftCollector = RobotMap.activeCollectorLeftWheel;
    SpeedController rightCollector = RobotMap.activeCollectorRightWheel;
    DoubleSolenoid activeCollectorPnuematic = RobotMap.activeCollectorPnuematic;

    public boolean activeCollectorState;
    public boolean activeCollectorPneumaticState;
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    public void collect(double speed){
    	leftCollector.set(speed);
    	rightCollector.set(-speed);
    	activeCollectorState = true;
    }
    public void reject(double speed){
    	leftCollector.set(-speed);
    	rightCollector.set(speed);	
    }
    public void stop(){
    	leftCollector.set(0);
    	rightCollector.set(0);
    	activeCollectorState = false;
    	//System.out.println("ActiveCollector should be Stopped");
    }
    public void open(){
    	activeCollectorPnuematic.set(DoubleSolenoid.Value.kReverse); 
    	activeCollectorPneumaticState = true;
    }
    public void close(){
    	activeCollectorPnuematic.set(DoubleSolenoid.Value.kForward);
    	activeCollectorPneumaticState = false;
    }
   
    public void collectLeft(double speed){
    	leftCollector.set(speed);
    }
    public void collectRight(double speed){
    	rightCollector.set(-speed);
    }
    
}

